- name: disable nodejs module
  ansible.builtin.command: dnf module disable nodejs -y
  
- name: enable nodejs:20 module 
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql

- name: create expense user 
  ansible.builtin.user:
    name: expense

# - name: import from common role
#   include_role: 
#     name: common
#     tasks_from: main

# - name: create app directory
#   ansible.builtin.file:
#     state: directory
#     path: /app

# - name: download the code 
#   ansible.builtin.get_url:
#     dest: /tmp/backend.zip
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip

# - name: unzip the code
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app/
#     remote_src: yes

- name: install nodejs dependies
  community.general.npm:
    path: /app/

- name: copy backend service
  ansible.builtin.template:      ##if we want we can refer the files also##
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install pip dependies
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
  - PyMySQL
  - cryptography

- name: adding mysql schema
  community.mysql.mysql_db:
    state: import
    name: all
    target: /app/schema/backend.sql
    login_host: "{{ MYSQL_HOST }}"
    login_password: "{{ MYSQL_PASSWORD }}"
    login_user: "{{ MYSQL_USER }}"

- name: start,enable and daemon reload backend
  tags:
  - deployment
  ansible.builtin.systemd_service:
    name: backend
    state: started
    enabled: true
    daemon_reload: true

      